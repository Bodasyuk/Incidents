// <auto-generated />
using System;
using Incidents.DataAccess.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Incidents.Migrations
{
    [DbContext(typeof(IncidentsDBContext))]
    [Migration("20220104162023_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Incidents.DataAccess.Entities.Accounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("IncidentsName")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("NameIncident")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("IncidentsName");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("NameIncident");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountsId")
                        .HasColumnType("integer");

                    b.Property<int?>("AccountsId1")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("AccountsId1");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Incidents", b =>
                {
                    b.Property<Guid>("Name")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Name")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Incidents");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Accounts", b =>
                {
                    b.HasOne("Incidents.DataAccess.Entities.Incidents", null)
                        .WithMany()
                        .HasForeignKey("IncidentsName");

                    b.HasOne("Incidents.DataAccess.Entities.Incidents", "Incidents")
                        .WithMany("Accounts")
                        .HasForeignKey("NameIncident")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Incidents");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Contacts", b =>
                {
                    b.HasOne("Incidents.DataAccess.Entities.Accounts", "Accounts")
                        .WithMany("Contacts")
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Incidents.DataAccess.Entities.Accounts", null)
                        .WithMany()
                        .HasForeignKey("AccountsId1");

                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Accounts", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Incidents.DataAccess.Entities.Incidents", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
